###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     See https://github.com/bazelbuild/rules_rust/blob/main/examples/crate_universe/vendor_local_pkgs/BUILD.bazel
###############################################################################
"""
# `crates_repository` API

- [aliases](#aliases)
- [crate_deps](#crate_deps)
- [all_crate_deps](#all_crate_deps)
- [crate_repositories](#crate_repositories)

"""

load("@bazel_skylib//lib:selects.bzl", "selects")
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")

###############################################################################
# MACROS API
###############################################################################

# An identifier that represent common dependencies (unconditional).
_COMMON_CONDITION = ""

def _flatten_dependency_maps(all_dependency_maps):
    """Flatten a list of dependency maps into one dictionary.

    Dependency maps have the following structure:

    ```python
    DEPENDENCIES_MAP = {
        # The first key in the map is a Bazel package
        # name of the workspace this file is defined in.
        "workspace_member_package": {

            # Not all dependencies are supported for all platforms.
            # the condition key is the condition required to be true
            # on the host platform.
            "condition": {

                # An alias to a crate target.     # The label of the crate target the
                # Aliases are only crate names.   # package name refers to.
                "package_name":                   "@full//:label",
            }
        }
    }
    ```

    Args:
        all_dependency_maps (list): A list of dicts as described above

    Returns:
        dict: A dictionary as described above
    """
    dependencies = {}

    for workspace_deps_map in all_dependency_maps:
        for pkg_name, conditional_deps_map in workspace_deps_map.items():
            if pkg_name not in dependencies:
                non_frozen_map = dict()
                for key, values in conditional_deps_map.items():
                    non_frozen_map.update({key: dict(values.items())})
                dependencies.setdefault(pkg_name, non_frozen_map)
                continue

            for condition, deps_map in conditional_deps_map.items():
                # If the condition has not been recorded, do so and continue
                if condition not in dependencies[pkg_name]:
                    dependencies[pkg_name].setdefault(condition, dict(deps_map.items()))
                    continue

                # Alert on any miss-matched dependencies
                inconsistent_entries = []
                for crate_name, crate_label in deps_map.items():
                    existing = dependencies[pkg_name][condition].get(crate_name)
                    if existing and existing != crate_label:
                        inconsistent_entries.append((crate_name, existing, crate_label))
                    dependencies[pkg_name][condition].update({crate_name: crate_label})

    return dependencies

def crate_deps(deps, package_name = None):
    """Finds the fully qualified label of the requested crates for the package where this macro is called.

    Args:
        deps (list): The desired list of crate targets.
        package_name (str, optional): The package name of the set of dependencies to look up.
            Defaults to `native.package_name()`.

    Returns:
        list: A list of labels to generated rust targets (str)
    """

    if not deps:
        return []

    if package_name == None:
        package_name = native.package_name()

    # Join both sets of dependencies
    dependencies = _flatten_dependency_maps([
        _NORMAL_DEPENDENCIES,
        _NORMAL_DEV_DEPENDENCIES,
        _PROC_MACRO_DEPENDENCIES,
        _PROC_MACRO_DEV_DEPENDENCIES,
        _BUILD_DEPENDENCIES,
        _BUILD_PROC_MACRO_DEPENDENCIES,
    ]).pop(package_name, {})

    # Combine all conditional packages so we can easily index over a flat list
    # TODO: Perhaps this should actually return select statements and maintain
    # the conditionals of the dependencies
    flat_deps = {}
    for deps_set in dependencies.values():
        for crate_name, crate_label in deps_set.items():
            flat_deps.update({crate_name: crate_label})

    missing_crates = []
    crate_targets = []
    for crate_target in deps:
        if crate_target not in flat_deps:
            missing_crates.append(crate_target)
        else:
            crate_targets.append(flat_deps[crate_target])

    if missing_crates:
        fail("Could not find crates `{}` among dependencies of `{}`. Available dependencies were `{}`".format(
            missing_crates,
            package_name,
            dependencies,
        ))

    return crate_targets

def all_crate_deps(
        normal = False,
        normal_dev = False,
        proc_macro = False,
        proc_macro_dev = False,
        build = False,
        build_proc_macro = False,
        package_name = None):
    """Finds the fully qualified label of all requested direct crate dependencies \
    for the package where this macro is called.

    If no parameters are set, all normal dependencies are returned. Setting any one flag will
    otherwise impact the contents of the returned list.

    Args:
        normal (bool, optional): If True, normal dependencies are included in the
            output list.
        normal_dev (bool, optional): If True, normal dev dependencies will be
            included in the output list..
        proc_macro (bool, optional): If True, proc_macro dependencies are included
            in the output list.
        proc_macro_dev (bool, optional): If True, dev proc_macro dependencies are
            included in the output list.
        build (bool, optional): If True, build dependencies are included
            in the output list.
        build_proc_macro (bool, optional): If True, build proc_macro dependencies are
            included in the output list.
        package_name (str, optional): The package name of the set of dependencies to look up.
            Defaults to `native.package_name()` when unset.

    Returns:
        list: A list of labels to generated rust targets (str)
    """

    if package_name == None:
        package_name = native.package_name()

    # Determine the relevant maps to use
    all_dependency_maps = []
    if normal:
        all_dependency_maps.append(_NORMAL_DEPENDENCIES)
    if normal_dev:
        all_dependency_maps.append(_NORMAL_DEV_DEPENDENCIES)
    if proc_macro:
        all_dependency_maps.append(_PROC_MACRO_DEPENDENCIES)
    if proc_macro_dev:
        all_dependency_maps.append(_PROC_MACRO_DEV_DEPENDENCIES)
    if build:
        all_dependency_maps.append(_BUILD_DEPENDENCIES)
    if build_proc_macro:
        all_dependency_maps.append(_BUILD_PROC_MACRO_DEPENDENCIES)

    # Default to always using normal dependencies
    if not all_dependency_maps:
        all_dependency_maps.append(_NORMAL_DEPENDENCIES)

    dependencies = _flatten_dependency_maps(all_dependency_maps).pop(package_name, None)

    if not dependencies:
        if dependencies == None:
            fail("Tried to get all_crate_deps for package " + package_name + " but that package had no Cargo.toml file")
        else:
            return []

    crate_deps = list(dependencies.pop(_COMMON_CONDITION, {}).values())
    for condition, deps in dependencies.items():
        crate_deps += selects.with_or({
            tuple(_CONDITIONS[condition]): deps.values(),
            "//conditions:default": [],
        })

    return crate_deps

def aliases(
        normal = False,
        normal_dev = False,
        proc_macro = False,
        proc_macro_dev = False,
        build = False,
        build_proc_macro = False,
        package_name = None):
    """Produces a map of Crate alias names to their original label

    If no dependency kinds are specified, `normal` and `proc_macro` are used by default.
    Setting any one flag will otherwise determine the contents of the returned dict.

    Args:
        normal (bool, optional): If True, normal dependencies are included in the
            output list.
        normal_dev (bool, optional): If True, normal dev dependencies will be
            included in the output list..
        proc_macro (bool, optional): If True, proc_macro dependencies are included
            in the output list.
        proc_macro_dev (bool, optional): If True, dev proc_macro dependencies are
            included in the output list.
        build (bool, optional): If True, build dependencies are included
            in the output list.
        build_proc_macro (bool, optional): If True, build proc_macro dependencies are
            included in the output list.
        package_name (str, optional): The package name of the set of dependencies to look up.
            Defaults to `native.package_name()` when unset.

    Returns:
        dict: The aliases of all associated packages
    """
    if package_name == None:
        package_name = native.package_name()

    # Determine the relevant maps to use
    all_aliases_maps = []
    if normal:
        all_aliases_maps.append(_NORMAL_ALIASES)
    if normal_dev:
        all_aliases_maps.append(_NORMAL_DEV_ALIASES)
    if proc_macro:
        all_aliases_maps.append(_PROC_MACRO_ALIASES)
    if proc_macro_dev:
        all_aliases_maps.append(_PROC_MACRO_DEV_ALIASES)
    if build:
        all_aliases_maps.append(_BUILD_ALIASES)
    if build_proc_macro:
        all_aliases_maps.append(_BUILD_PROC_MACRO_ALIASES)

    # Default to always using normal aliases
    if not all_aliases_maps:
        all_aliases_maps.append(_NORMAL_ALIASES)
        all_aliases_maps.append(_PROC_MACRO_ALIASES)

    aliases = _flatten_dependency_maps(all_aliases_maps).pop(package_name, None)

    if not aliases:
        return dict()

    common_items = aliases.pop(_COMMON_CONDITION, {}).items()

    # If there are only common items in the dictionary, immediately return them
    if not len(aliases.keys()) == 1:
        return dict(common_items)

    # Build a single select statement where each conditional has accounted for the
    # common set of aliases.
    crate_aliases = {"//conditions:default": dict(common_items)}
    for condition, deps in aliases.items():
        condition_triples = _CONDITIONS[condition]
        for triple in condition_triples:
            if triple in crate_aliases:
                crate_aliases[triple].update(deps)
            else:
                crate_aliases.update({triple: dict(deps.items() + common_items)})

    return select(crate_aliases)

###############################################################################
# WORKSPACE MEMBER DEPS AND ALIASES
###############################################################################

_NORMAL_DEPENDENCIES = {
    "": {
        _COMMON_CONDITION: {
            "chrono": "@crates_vendor_pkgs__chrono-0.4.31//:chrono",
            "chrono-tz": "@crates_vendor_pkgs__chrono-tz-0.8.4//:chrono_tz",
            "convert_case": "@crates_vendor_pkgs__convert_case-0.3.2//:convert_case",
            "reqwest": "@crates_vendor_pkgs__reqwest-0.10.10//:reqwest",
            "serde": "@crates_vendor_pkgs__serde-1.0.190//:serde",
            "serde_json": "@crates_vendor_pkgs__serde_json-1.0.108//:serde_json",
            "strum": "@crates_vendor_pkgs__strum-0.25.0//:strum",
            "thiserror": "@crates_vendor_pkgs__thiserror-1.0.50//:thiserror",
            "tokio": "@crates_vendor_pkgs__tokio-0.2.25//:tokio",
        },
    },
}

_NORMAL_ALIASES = {
    "": {
        _COMMON_CONDITION: {
        },
    },
}

_NORMAL_DEV_DEPENDENCIES = {
    "": {
    },
}

_NORMAL_DEV_ALIASES = {
    "": {
    },
}

_PROC_MACRO_DEPENDENCIES = {
    "": {
        _COMMON_CONDITION: {
            "strum_macros": "@crates_vendor_pkgs__strum_macros-0.25.3//:strum_macros",
        },
    },
}

_PROC_MACRO_ALIASES = {
    "": {
    },
}

_PROC_MACRO_DEV_DEPENDENCIES = {
    "": {
    },
}

_PROC_MACRO_DEV_ALIASES = {
    "": {
    },
}

_BUILD_DEPENDENCIES = {
    "": {
    },
}

_BUILD_ALIASES = {
    "": {
    },
}

_BUILD_PROC_MACRO_DEPENDENCIES = {
    "": {
    },
}

_BUILD_PROC_MACRO_ALIASES = {
    "": {
    },
}

_CONDITIONS = {
    "aarch64-apple-darwin": ["@rules_rust//rust/platform:aarch64-apple-darwin"],
    "aarch64-apple-ios": ["@rules_rust//rust/platform:aarch64-apple-ios"],
    "aarch64-apple-ios-sim": ["@rules_rust//rust/platform:aarch64-apple-ios-sim"],
    "aarch64-fuchsia": ["@rules_rust//rust/platform:aarch64-fuchsia"],
    "aarch64-linux-android": ["@rules_rust//rust/platform:aarch64-linux-android"],
    "aarch64-pc-windows-gnullvm": [],
    "aarch64-pc-windows-msvc": ["@rules_rust//rust/platform:aarch64-pc-windows-msvc"],
    "aarch64-unknown-linux-gnu": ["@rules_rust//rust/platform:aarch64-unknown-linux-gnu"],
    "arm-unknown-linux-gnueabi": ["@rules_rust//rust/platform:arm-unknown-linux-gnueabi"],
    "armv7-linux-androideabi": ["@rules_rust//rust/platform:armv7-linux-androideabi"],
    "armv7-unknown-linux-gnueabi": ["@rules_rust//rust/platform:armv7-unknown-linux-gnueabi"],
    "cfg(all(any(target_os = \"android\", target_os = \"linux\"), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))": ["@rules_rust//rust/platform:aarch64-linux-android", "@rules_rust//rust/platform:armv7-linux-androideabi", "@rules_rust//rust/platform:i686-linux-android", "@rules_rust//rust/platform:powerpc-unknown-linux-gnu", "@rules_rust//rust/platform:s390x-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-linux-android"],
    "cfg(all(not(rustix_use_libc), not(miri), target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"))))": ["@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:arm-unknown-linux-gnueabi", "@rules_rust//rust/platform:armv7-unknown-linux-gnueabi", "@rules_rust//rust/platform:i686-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-apple-ios", "@rules_rust//rust/platform:aarch64-apple-ios-sim", "@rules_rust//rust/platform:aarch64-fuchsia", "@rules_rust//rust/platform:aarch64-linux-android", "@rules_rust//rust/platform:armv7-linux-androideabi", "@rules_rust//rust/platform:i686-apple-darwin", "@rules_rust//rust/platform:i686-linux-android", "@rules_rust//rust/platform:i686-unknown-freebsd", "@rules_rust//rust/platform:powerpc-unknown-linux-gnu", "@rules_rust//rust/platform:riscv32imc-unknown-none-elf", "@rules_rust//rust/platform:riscv64gc-unknown-none-elf", "@rules_rust//rust/platform:s390x-unknown-linux-gnu", "@rules_rust//rust/platform:thumbv7em-none-eabi", "@rules_rust//rust/platform:thumbv8m.main-none-eabi", "@rules_rust//rust/platform:wasm32-unknown-unknown", "@rules_rust//rust/platform:wasm32-wasi", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-apple-ios", "@rules_rust//rust/platform:x86_64-fuchsia", "@rules_rust//rust/platform:x86_64-linux-android", "@rules_rust//rust/platform:x86_64-unknown-freebsd", "@rules_rust//rust/platform:x86_64-unknown-none"],
    "cfg(all(target_arch = \"aarch64\", target_env = \"msvc\", not(windows_raw_dylib)))": ["@rules_rust//rust/platform:aarch64-pc-windows-msvc"],
    "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))": ["@rules_rust//rust/platform:wasm32-unknown-unknown"],
    "cfg(all(target_arch = \"x86\", target_env = \"gnu\", not(windows_raw_dylib)))": ["@rules_rust//rust/platform:i686-unknown-linux-gnu"],
    "cfg(all(target_arch = \"x86\", target_env = \"msvc\", not(windows_raw_dylib)))": ["@rules_rust//rust/platform:i686-pc-windows-msvc"],
    "cfg(all(target_arch = \"x86_64\", target_env = \"gnu\", not(target_abi = \"llvm\"), not(windows_raw_dylib)))": ["@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(all(target_arch = \"x86_64\", target_env = \"msvc\", not(windows_raw_dylib)))": ["@rules_rust//rust/platform:x86_64-pc-windows-msvc"],
    "cfg(any(target_os = \"macos\", target_os = \"ios\"))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-apple-ios", "@rules_rust//rust/platform:aarch64-apple-ios-sim", "@rules_rust//rust/platform:i686-apple-darwin", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-apple-ios"],
    "cfg(any(unix, target_os = \"wasi\"))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-apple-ios", "@rules_rust//rust/platform:aarch64-apple-ios-sim", "@rules_rust//rust/platform:aarch64-fuchsia", "@rules_rust//rust/platform:aarch64-linux-android", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:arm-unknown-linux-gnueabi", "@rules_rust//rust/platform:armv7-linux-androideabi", "@rules_rust//rust/platform:armv7-unknown-linux-gnueabi", "@rules_rust//rust/platform:i686-apple-darwin", "@rules_rust//rust/platform:i686-linux-android", "@rules_rust//rust/platform:i686-unknown-freebsd", "@rules_rust//rust/platform:i686-unknown-linux-gnu", "@rules_rust//rust/platform:powerpc-unknown-linux-gnu", "@rules_rust//rust/platform:s390x-unknown-linux-gnu", "@rules_rust//rust/platform:wasm32-wasi", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-apple-ios", "@rules_rust//rust/platform:x86_64-fuchsia", "@rules_rust//rust/platform:x86_64-linux-android", "@rules_rust//rust/platform:x86_64-unknown-freebsd", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))": ["@rules_rust//rust/platform:aarch64-fuchsia", "@rules_rust//rust/platform:aarch64-linux-android", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:arm-unknown-linux-gnueabi", "@rules_rust//rust/platform:armv7-linux-androideabi", "@rules_rust//rust/platform:armv7-unknown-linux-gnueabi", "@rules_rust//rust/platform:i686-linux-android", "@rules_rust//rust/platform:i686-unknown-freebsd", "@rules_rust//rust/platform:i686-unknown-linux-gnu", "@rules_rust//rust/platform:powerpc-unknown-linux-gnu", "@rules_rust//rust/platform:riscv32imc-unknown-none-elf", "@rules_rust//rust/platform:riscv64gc-unknown-none-elf", "@rules_rust//rust/platform:s390x-unknown-linux-gnu", "@rules_rust//rust/platform:thumbv7em-none-eabi", "@rules_rust//rust/platform:thumbv8m.main-none-eabi", "@rules_rust//rust/platform:wasm32-unknown-unknown", "@rules_rust//rust/platform:wasm32-wasi", "@rules_rust//rust/platform:x86_64-fuchsia", "@rules_rust//rust/platform:x86_64-linux-android", "@rules_rust//rust/platform:x86_64-unknown-freebsd", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-unknown-none"],
    "cfg(not(target_arch = \"wasm32\"))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-apple-ios", "@rules_rust//rust/platform:aarch64-apple-ios-sim", "@rules_rust//rust/platform:aarch64-fuchsia", "@rules_rust//rust/platform:aarch64-linux-android", "@rules_rust//rust/platform:aarch64-pc-windows-msvc", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:arm-unknown-linux-gnueabi", "@rules_rust//rust/platform:armv7-linux-androideabi", "@rules_rust//rust/platform:armv7-unknown-linux-gnueabi", "@rules_rust//rust/platform:i686-apple-darwin", "@rules_rust//rust/platform:i686-linux-android", "@rules_rust//rust/platform:i686-pc-windows-msvc", "@rules_rust//rust/platform:i686-unknown-freebsd", "@rules_rust//rust/platform:i686-unknown-linux-gnu", "@rules_rust//rust/platform:powerpc-unknown-linux-gnu", "@rules_rust//rust/platform:riscv32imc-unknown-none-elf", "@rules_rust//rust/platform:riscv64gc-unknown-none-elf", "@rules_rust//rust/platform:s390x-unknown-linux-gnu", "@rules_rust//rust/platform:thumbv7em-none-eabi", "@rules_rust//rust/platform:thumbv8m.main-none-eabi", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-apple-ios", "@rules_rust//rust/platform:x86_64-fuchsia", "@rules_rust//rust/platform:x86_64-linux-android", "@rules_rust//rust/platform:x86_64-pc-windows-msvc", "@rules_rust//rust/platform:x86_64-unknown-freebsd", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-unknown-none"],
    "cfg(not(windows))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-apple-ios", "@rules_rust//rust/platform:aarch64-apple-ios-sim", "@rules_rust//rust/platform:aarch64-fuchsia", "@rules_rust//rust/platform:aarch64-linux-android", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:arm-unknown-linux-gnueabi", "@rules_rust//rust/platform:armv7-linux-androideabi", "@rules_rust//rust/platform:armv7-unknown-linux-gnueabi", "@rules_rust//rust/platform:i686-apple-darwin", "@rules_rust//rust/platform:i686-linux-android", "@rules_rust//rust/platform:i686-unknown-freebsd", "@rules_rust//rust/platform:i686-unknown-linux-gnu", "@rules_rust//rust/platform:powerpc-unknown-linux-gnu", "@rules_rust//rust/platform:riscv32imc-unknown-none-elf", "@rules_rust//rust/platform:riscv64gc-unknown-none-elf", "@rules_rust//rust/platform:s390x-unknown-linux-gnu", "@rules_rust//rust/platform:thumbv7em-none-eabi", "@rules_rust//rust/platform:thumbv8m.main-none-eabi", "@rules_rust//rust/platform:wasm32-unknown-unknown", "@rules_rust//rust/platform:wasm32-wasi", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-apple-ios", "@rules_rust//rust/platform:x86_64-fuchsia", "@rules_rust//rust/platform:x86_64-linux-android", "@rules_rust//rust/platform:x86_64-unknown-freebsd", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-unknown-none"],
    "cfg(target_arch = \"wasm32\")": ["@rules_rust//rust/platform:wasm32-unknown-unknown", "@rules_rust//rust/platform:wasm32-wasi"],
    "cfg(target_feature = \"atomics\")": [],
    "cfg(target_os = \"android\")": ["@rules_rust//rust/platform:aarch64-linux-android", "@rules_rust//rust/platform:armv7-linux-androideabi", "@rules_rust//rust/platform:i686-linux-android", "@rules_rust//rust/platform:x86_64-linux-android"],
    "cfg(target_os = \"fuchsia\")": ["@rules_rust//rust/platform:aarch64-fuchsia", "@rules_rust//rust/platform:x86_64-fuchsia"],
    "cfg(target_os = \"haiku\")": [],
    "cfg(target_os = \"hermit\")": [],
    "cfg(target_os = \"redox\")": [],
    "cfg(target_os = \"wasi\")": ["@rules_rust//rust/platform:wasm32-wasi"],
    "cfg(target_os = \"windows\")": ["@rules_rust//rust/platform:aarch64-pc-windows-msvc", "@rules_rust//rust/platform:i686-pc-windows-msvc", "@rules_rust//rust/platform:x86_64-pc-windows-msvc"],
    "cfg(unix)": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-apple-ios", "@rules_rust//rust/platform:aarch64-apple-ios-sim", "@rules_rust//rust/platform:aarch64-fuchsia", "@rules_rust//rust/platform:aarch64-linux-android", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:arm-unknown-linux-gnueabi", "@rules_rust//rust/platform:armv7-linux-androideabi", "@rules_rust//rust/platform:armv7-unknown-linux-gnueabi", "@rules_rust//rust/platform:i686-apple-darwin", "@rules_rust//rust/platform:i686-linux-android", "@rules_rust//rust/platform:i686-unknown-freebsd", "@rules_rust//rust/platform:i686-unknown-linux-gnu", "@rules_rust//rust/platform:powerpc-unknown-linux-gnu", "@rules_rust//rust/platform:s390x-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-apple-ios", "@rules_rust//rust/platform:x86_64-fuchsia", "@rules_rust//rust/platform:x86_64-linux-android", "@rules_rust//rust/platform:x86_64-unknown-freebsd", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(windows)": ["@rules_rust//rust/platform:aarch64-pc-windows-msvc", "@rules_rust//rust/platform:i686-pc-windows-msvc", "@rules_rust//rust/platform:x86_64-pc-windows-msvc"],
    "i686-apple-darwin": ["@rules_rust//rust/platform:i686-apple-darwin"],
    "i686-linux-android": ["@rules_rust//rust/platform:i686-linux-android"],
    "i686-pc-windows-gnu": [],
    "i686-pc-windows-msvc": ["@rules_rust//rust/platform:i686-pc-windows-msvc"],
    "i686-unknown-freebsd": ["@rules_rust//rust/platform:i686-unknown-freebsd"],
    "i686-unknown-linux-gnu": ["@rules_rust//rust/platform:i686-unknown-linux-gnu"],
    "powerpc-unknown-linux-gnu": ["@rules_rust//rust/platform:powerpc-unknown-linux-gnu"],
    "riscv32imc-unknown-none-elf": ["@rules_rust//rust/platform:riscv32imc-unknown-none-elf"],
    "riscv64gc-unknown-none-elf": ["@rules_rust//rust/platform:riscv64gc-unknown-none-elf"],
    "s390x-unknown-linux-gnu": ["@rules_rust//rust/platform:s390x-unknown-linux-gnu"],
    "thumbv7em-none-eabi": ["@rules_rust//rust/platform:thumbv7em-none-eabi"],
    "thumbv8m.main-none-eabi": ["@rules_rust//rust/platform:thumbv8m.main-none-eabi"],
    "wasm32-unknown-unknown": ["@rules_rust//rust/platform:wasm32-unknown-unknown"],
    "wasm32-wasi": ["@rules_rust//rust/platform:wasm32-wasi"],
    "x86_64-apple-darwin": ["@rules_rust//rust/platform:x86_64-apple-darwin"],
    "x86_64-apple-ios": ["@rules_rust//rust/platform:x86_64-apple-ios"],
    "x86_64-fuchsia": ["@rules_rust//rust/platform:x86_64-fuchsia"],
    "x86_64-linux-android": ["@rules_rust//rust/platform:x86_64-linux-android"],
    "x86_64-pc-windows-gnu": [],
    "x86_64-pc-windows-gnullvm": [],
    "x86_64-pc-windows-msvc": ["@rules_rust//rust/platform:x86_64-pc-windows-msvc"],
    "x86_64-unknown-freebsd": ["@rules_rust//rust/platform:x86_64-unknown-freebsd"],
    "x86_64-unknown-linux-gnu": ["@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "x86_64-unknown-none": ["@rules_rust//rust/platform:x86_64-unknown-none"],
}

###############################################################################

def crate_repositories():
    """A macro for defining repositories for all generated crates"""
    maybe(
        http_archive,
        name = "crates_vendor_pkgs__aho-corasick-1.1.2",
        sha256 = "b2969dcb958b36655471fc61f7e416fa76033bdd4bfed0678d8fee1e2d07a1f0",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/aho-corasick/1.1.2/download"],
        strip_prefix = "aho-corasick-1.1.2",
        build_file = Label("@//clients/rust/crates:BUILD.aho-corasick-1.1.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__android-tzdata-0.1.1",
        sha256 = "e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/android-tzdata/0.1.1/download"],
        strip_prefix = "android-tzdata-0.1.1",
        build_file = Label("@//clients/rust/crates:BUILD.android-tzdata-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__android_system_properties-0.1.5",
        sha256 = "819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/android_system_properties/0.1.5/download"],
        strip_prefix = "android_system_properties-0.1.5",
        build_file = Label("@//clients/rust/crates:BUILD.android_system_properties-0.1.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__autocfg-1.1.0",
        sha256 = "d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/autocfg/1.1.0/download"],
        strip_prefix = "autocfg-1.1.0",
        build_file = Label("@//clients/rust/crates:BUILD.autocfg-1.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__base64-0.13.1",
        sha256 = "9e1b586273c5702936fe7b7d6896644d8be71e6314cfe09d3167c95f712589e8",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/base64/0.13.1/download"],
        strip_prefix = "base64-0.13.1",
        build_file = Label("@//clients/rust/crates:BUILD.base64-0.13.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__bitflags-1.3.2",
        sha256 = "bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/bitflags/1.3.2/download"],
        strip_prefix = "bitflags-1.3.2",
        build_file = Label("@//clients/rust/crates:BUILD.bitflags-1.3.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__bitflags-2.4.1",
        sha256 = "327762f6e5a765692301e5bb513e0d9fef63be86bbc14528052b1cd3e6f03e07",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/bitflags/2.4.1/download"],
        strip_prefix = "bitflags-2.4.1",
        build_file = Label("@//clients/rust/crates:BUILD.bitflags-2.4.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__bumpalo-3.14.0",
        sha256 = "7f30e7476521f6f8af1a1c4c0b8cc94f0bee37d91763d0ca2665f299b6cd8aec",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/bumpalo/3.14.0/download"],
        strip_prefix = "bumpalo-3.14.0",
        build_file = Label("@//clients/rust/crates:BUILD.bumpalo-3.14.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__bytes-0.5.6",
        sha256 = "0e4cec68f03f32e44924783795810fa50a7035d8c8ebe78580ad7e6c703fba38",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/bytes/0.5.6/download"],
        strip_prefix = "bytes-0.5.6",
        build_file = Label("@//clients/rust/crates:BUILD.bytes-0.5.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__bytes-1.5.0",
        sha256 = "a2bd12c1caf447e69cd4528f47f94d203fd2582878ecb9e9465484c4148a8223",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/bytes/1.5.0/download"],
        strip_prefix = "bytes-1.5.0",
        build_file = Label("@//clients/rust/crates:BUILD.bytes-1.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__cc-1.0.83",
        sha256 = "f1174fb0b6ec23863f8b971027804a42614e347eafb0a95bf0b12cdae21fc4d0",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/cc/1.0.83/download"],
        strip_prefix = "cc-1.0.83",
        build_file = Label("@//clients/rust/crates:BUILD.cc-1.0.83.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__cfg-if-0.1.10",
        sha256 = "4785bdd1c96b2a846b2bd7cc02e86b6b3dbf14e7e53446c4f54c92a361040822",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/cfg-if/0.1.10/download"],
        strip_prefix = "cfg-if-0.1.10",
        build_file = Label("@//clients/rust/crates:BUILD.cfg-if-0.1.10.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__cfg-if-1.0.0",
        sha256 = "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/cfg-if/1.0.0/download"],
        strip_prefix = "cfg-if-1.0.0",
        build_file = Label("@//clients/rust/crates:BUILD.cfg-if-1.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__chrono-0.4.31",
        sha256 = "7f2c685bad3eb3d45a01354cedb7d5faa66194d1d58ba6e267a8de788f79db38",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/chrono/0.4.31/download"],
        strip_prefix = "chrono-0.4.31",
        build_file = Label("@//clients/rust/crates:BUILD.chrono-0.4.31.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__chrono-tz-0.8.4",
        sha256 = "e23185c0e21df6ed832a12e2bda87c7d1def6842881fb634a8511ced741b0d76",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/chrono-tz/0.8.4/download"],
        strip_prefix = "chrono-tz-0.8.4",
        build_file = Label("@//clients/rust/crates:BUILD.chrono-tz-0.8.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__chrono-tz-build-0.2.1",
        sha256 = "433e39f13c9a060046954e0592a8d0a4bcb1040125cbf91cb8ee58964cfb350f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/chrono-tz-build/0.2.1/download"],
        strip_prefix = "chrono-tz-build-0.2.1",
        build_file = Label("@//clients/rust/crates:BUILD.chrono-tz-build-0.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__convert_case-0.3.2",
        sha256 = "6e1f025f441cdfb75831bec89b9d6a6ed02e5e763f78fc5e1ff30d4870fefaec",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/convert_case/0.3.2/download"],
        strip_prefix = "convert_case-0.3.2",
        build_file = Label("@//clients/rust/crates:BUILD.convert_case-0.3.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__core-foundation-0.9.3",
        sha256 = "194a7a9e6de53fa55116934067c844d9d749312f75c6f6d0980e8c252f8c2146",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/core-foundation/0.9.3/download"],
        strip_prefix = "core-foundation-0.9.3",
        build_file = Label("@//clients/rust/crates:BUILD.core-foundation-0.9.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__core-foundation-sys-0.8.4",
        sha256 = "e496a50fda8aacccc86d7529e2c1e0892dbd0f898a6b5645b5561b89c3210efa",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/core-foundation-sys/0.8.4/download"],
        strip_prefix = "core-foundation-sys-0.8.4",
        build_file = Label("@//clients/rust/crates:BUILD.core-foundation-sys-0.8.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__encoding_rs-0.8.33",
        sha256 = "7268b386296a025e474d5140678f75d6de9493ae55a5d709eeb9dd08149945e1",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/encoding_rs/0.8.33/download"],
        strip_prefix = "encoding_rs-0.8.33",
        build_file = Label("@//clients/rust/crates:BUILD.encoding_rs-0.8.33.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__errno-0.3.5",
        sha256 = "ac3e13f66a2f95e32a39eaa81f6b95d42878ca0e1db0c7543723dfe12557e860",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/errno/0.3.5/download"],
        strip_prefix = "errno-0.3.5",
        build_file = Label("@//clients/rust/crates:BUILD.errno-0.3.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__fastrand-2.0.1",
        sha256 = "25cbce373ec4653f1a01a31e8a5e5ec0c622dc27ff9c4e6606eefef5cbbed4a5",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/fastrand/2.0.1/download"],
        strip_prefix = "fastrand-2.0.1",
        build_file = Label("@//clients/rust/crates:BUILD.fastrand-2.0.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__fnv-1.0.7",
        sha256 = "3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/fnv/1.0.7/download"],
        strip_prefix = "fnv-1.0.7",
        build_file = Label("@//clients/rust/crates:BUILD.fnv-1.0.7.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__foreign-types-0.3.2",
        sha256 = "f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/foreign-types/0.3.2/download"],
        strip_prefix = "foreign-types-0.3.2",
        build_file = Label("@//clients/rust/crates:BUILD.foreign-types-0.3.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__foreign-types-shared-0.1.1",
        sha256 = "00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/foreign-types-shared/0.1.1/download"],
        strip_prefix = "foreign-types-shared-0.1.1",
        build_file = Label("@//clients/rust/crates:BUILD.foreign-types-shared-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__form_urlencoded-1.2.0",
        sha256 = "a62bc1cf6f830c2ec14a513a9fb124d0a213a629668a4186f329db21fe045652",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/form_urlencoded/1.2.0/download"],
        strip_prefix = "form_urlencoded-1.2.0",
        build_file = Label("@//clients/rust/crates:BUILD.form_urlencoded-1.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__fuchsia-zircon-0.3.3",
        sha256 = "2e9763c69ebaae630ba35f74888db465e49e259ba1bc0eda7d06f4a067615d82",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/fuchsia-zircon/0.3.3/download"],
        strip_prefix = "fuchsia-zircon-0.3.3",
        build_file = Label("@//clients/rust/crates:BUILD.fuchsia-zircon-0.3.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__fuchsia-zircon-sys-0.3.3",
        sha256 = "3dcaa9ae7725d12cdb85b3ad99a434db70b468c09ded17e012d86b5c1010f7a7",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/fuchsia-zircon-sys/0.3.3/download"],
        strip_prefix = "fuchsia-zircon-sys-0.3.3",
        build_file = Label("@//clients/rust/crates:BUILD.fuchsia-zircon-sys-0.3.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__futures-channel-0.3.29",
        sha256 = "ff4dd66668b557604244583e3e1e1eada8c5c2e96a6d0d6653ede395b78bbacb",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/futures-channel/0.3.29/download"],
        strip_prefix = "futures-channel-0.3.29",
        build_file = Label("@//clients/rust/crates:BUILD.futures-channel-0.3.29.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__futures-core-0.3.29",
        sha256 = "eb1d22c66e66d9d72e1758f0bd7d4fd0bee04cad842ee34587d68c07e45d088c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/futures-core/0.3.29/download"],
        strip_prefix = "futures-core-0.3.29",
        build_file = Label("@//clients/rust/crates:BUILD.futures-core-0.3.29.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__futures-io-0.3.29",
        sha256 = "8bf34a163b5c4c52d0478a4d757da8fb65cabef42ba90515efee0f6f9fa45aaa",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/futures-io/0.3.29/download"],
        strip_prefix = "futures-io-0.3.29",
        build_file = Label("@//clients/rust/crates:BUILD.futures-io-0.3.29.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__futures-sink-0.3.29",
        sha256 = "e36d3378ee38c2a36ad710c5d30c2911d752cb941c00c72dbabfb786a7970817",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/futures-sink/0.3.29/download"],
        strip_prefix = "futures-sink-0.3.29",
        build_file = Label("@//clients/rust/crates:BUILD.futures-sink-0.3.29.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__futures-task-0.3.29",
        sha256 = "efd193069b0ddadc69c46389b740bbccdd97203899b48d09c5f7969591d6bae2",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/futures-task/0.3.29/download"],
        strip_prefix = "futures-task-0.3.29",
        build_file = Label("@//clients/rust/crates:BUILD.futures-task-0.3.29.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__futures-util-0.3.29",
        sha256 = "a19526d624e703a3179b3d322efec918b6246ea0fa51d41124525f00f1cc8104",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/futures-util/0.3.29/download"],
        strip_prefix = "futures-util-0.3.29",
        build_file = Label("@//clients/rust/crates:BUILD.futures-util-0.3.29.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__h2-0.2.7",
        sha256 = "5e4728fd124914ad25e99e3d15a9361a879f6620f63cb56bbb08f95abb97a535",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/h2/0.2.7/download"],
        strip_prefix = "h2-0.2.7",
        build_file = Label("@//clients/rust/crates:BUILD.h2-0.2.7.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__hashbrown-0.12.3",
        sha256 = "8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/hashbrown/0.12.3/download"],
        strip_prefix = "hashbrown-0.12.3",
        build_file = Label("@//clients/rust/crates:BUILD.hashbrown-0.12.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__heck-0.4.1",
        sha256 = "95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/heck/0.4.1/download"],
        strip_prefix = "heck-0.4.1",
        build_file = Label("@//clients/rust/crates:BUILD.heck-0.4.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__hermit-abi-0.3.3",
        sha256 = "d77f7ec81a6d05a3abb01ab6eb7590f6083d08449fe5a1c8b1e620283546ccb7",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/hermit-abi/0.3.3/download"],
        strip_prefix = "hermit-abi-0.3.3",
        build_file = Label("@//clients/rust/crates:BUILD.hermit-abi-0.3.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__http-0.2.9",
        sha256 = "bd6effc99afb63425aff9b05836f029929e345a6148a14b7ecd5ab67af944482",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/http/0.2.9/download"],
        strip_prefix = "http-0.2.9",
        build_file = Label("@//clients/rust/crates:BUILD.http-0.2.9.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__http-body-0.3.1",
        sha256 = "13d5ff830006f7646652e057693569bfe0d51760c0085a071769d142a205111b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/http-body/0.3.1/download"],
        strip_prefix = "http-body-0.3.1",
        build_file = Label("@//clients/rust/crates:BUILD.http-body-0.3.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__httparse-1.8.0",
        sha256 = "d897f394bad6a705d5f4104762e116a75639e470d80901eed05a860a95cb1904",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/httparse/1.8.0/download"],
        strip_prefix = "httparse-1.8.0",
        build_file = Label("@//clients/rust/crates:BUILD.httparse-1.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__httpdate-0.3.2",
        sha256 = "494b4d60369511e7dea41cf646832512a94e542f68bb9c49e54518e0f468eb47",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/httpdate/0.3.2/download"],
        strip_prefix = "httpdate-0.3.2",
        build_file = Label("@//clients/rust/crates:BUILD.httpdate-0.3.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__hyper-0.13.10",
        sha256 = "8a6f157065790a3ed2f88679250419b5cdd96e714a0d65f7797fd337186e96bb",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/hyper/0.13.10/download"],
        strip_prefix = "hyper-0.13.10",
        build_file = Label("@//clients/rust/crates:BUILD.hyper-0.13.10.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__hyper-tls-0.4.3",
        sha256 = "d979acc56dcb5b8dddba3917601745e877576475aa046df3226eabdecef78eed",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/hyper-tls/0.4.3/download"],
        strip_prefix = "hyper-tls-0.4.3",
        build_file = Label("@//clients/rust/crates:BUILD.hyper-tls-0.4.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__iana-time-zone-0.1.58",
        sha256 = "8326b86b6cff230b97d0d312a6c40a60726df3332e721f72a1b035f451663b20",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/iana-time-zone/0.1.58/download"],
        strip_prefix = "iana-time-zone-0.1.58",
        build_file = Label("@//clients/rust/crates:BUILD.iana-time-zone-0.1.58.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__iana-time-zone-haiku-0.1.2",
        sha256 = "f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/iana-time-zone-haiku/0.1.2/download"],
        strip_prefix = "iana-time-zone-haiku-0.1.2",
        build_file = Label("@//clients/rust/crates:BUILD.iana-time-zone-haiku-0.1.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__idna-0.4.0",
        sha256 = "7d20d6b07bfbc108882d88ed8e37d39636dcc260e15e30c45e6ba089610b917c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/idna/0.4.0/download"],
        strip_prefix = "idna-0.4.0",
        build_file = Label("@//clients/rust/crates:BUILD.idna-0.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__indexmap-1.9.3",
        sha256 = "bd070e393353796e801d209ad339e89596eb4c8d430d18ede6a1cced8fafbd99",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/indexmap/1.9.3/download"],
        strip_prefix = "indexmap-1.9.3",
        build_file = Label("@//clients/rust/crates:BUILD.indexmap-1.9.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__iovec-0.1.4",
        sha256 = "b2b3ea6ff95e175473f8ffe6a7eb7c00d054240321b84c57051175fe3c1e075e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/iovec/0.1.4/download"],
        strip_prefix = "iovec-0.1.4",
        build_file = Label("@//clients/rust/crates:BUILD.iovec-0.1.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__ipnet-2.9.0",
        sha256 = "8f518f335dce6725a761382244631d86cf0ccb2863413590b31338feb467f9c3",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/ipnet/2.9.0/download"],
        strip_prefix = "ipnet-2.9.0",
        build_file = Label("@//clients/rust/crates:BUILD.ipnet-2.9.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__itoa-0.4.8",
        sha256 = "b71991ff56294aa922b450139ee08b3bfc70982c6b2c7562771375cf73542dd4",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/itoa/0.4.8/download"],
        strip_prefix = "itoa-0.4.8",
        build_file = Label("@//clients/rust/crates:BUILD.itoa-0.4.8.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__itoa-1.0.9",
        sha256 = "af150ab688ff2122fcef229be89cb50dd66af9e01a4ff320cc137eecc9bacc38",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/itoa/1.0.9/download"],
        strip_prefix = "itoa-1.0.9",
        build_file = Label("@//clients/rust/crates:BUILD.itoa-1.0.9.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__js-sys-0.3.65",
        sha256 = "54c0c35952f67de54bb584e9fd912b3023117cbafc0a77d8f3dee1fb5f572fe8",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/js-sys/0.3.65/download"],
        strip_prefix = "js-sys-0.3.65",
        build_file = Label("@//clients/rust/crates:BUILD.js-sys-0.3.65.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__kernel32-sys-0.2.2",
        sha256 = "7507624b29483431c0ba2d82aece8ca6cdba9382bff4ddd0f7490560c056098d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/kernel32-sys/0.2.2/download"],
        strip_prefix = "kernel32-sys-0.2.2",
        build_file = Label("@//clients/rust/crates:BUILD.kernel32-sys-0.2.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__lazy_static-1.4.0",
        sha256 = "e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/lazy_static/1.4.0/download"],
        strip_prefix = "lazy_static-1.4.0",
        build_file = Label("@//clients/rust/crates:BUILD.lazy_static-1.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__libc-0.2.149",
        sha256 = "a08173bc88b7955d1b3145aa561539096c421ac8debde8cbc3612ec635fee29b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/libc/0.2.149/download"],
        strip_prefix = "libc-0.2.149",
        build_file = Label("@//clients/rust/crates:BUILD.libc-0.2.149.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__linux-raw-sys-0.4.10",
        sha256 = "da2479e8c062e40bf0066ffa0bc823de0a9368974af99c9f6df941d2c231e03f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/linux-raw-sys/0.4.10/download"],
        strip_prefix = "linux-raw-sys-0.4.10",
        build_file = Label("@//clients/rust/crates:BUILD.linux-raw-sys-0.4.10.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__log-0.4.20",
        sha256 = "b5e6163cb8c49088c2c36f57875e58ccd8c87c7427f7fbd50ea6710b2f3f2e8f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/log/0.4.20/download"],
        strip_prefix = "log-0.4.20",
        build_file = Label("@//clients/rust/crates:BUILD.log-0.4.20.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__memchr-2.6.4",
        sha256 = "f665ee40bc4a3c5590afb1e9677db74a508659dfd71e126420da8274909a0167",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/memchr/2.6.4/download"],
        strip_prefix = "memchr-2.6.4",
        build_file = Label("@//clients/rust/crates:BUILD.memchr-2.6.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__mime-0.3.17",
        sha256 = "6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/mime/0.3.17/download"],
        strip_prefix = "mime-0.3.17",
        build_file = Label("@//clients/rust/crates:BUILD.mime-0.3.17.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__mime_guess-2.0.4",
        sha256 = "4192263c238a5f0d0c6bfd21f336a313a4ce1c450542449ca191bb657b4642ef",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/mime_guess/2.0.4/download"],
        strip_prefix = "mime_guess-2.0.4",
        build_file = Label("@//clients/rust/crates:BUILD.mime_guess-2.0.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__mio-0.6.23",
        sha256 = "4afd66f5b91bf2a3bc13fad0e21caedac168ca4c707504e75585648ae80e4cc4",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/mio/0.6.23/download"],
        strip_prefix = "mio-0.6.23",
        build_file = Label("@//clients/rust/crates:BUILD.mio-0.6.23.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__mio-named-pipes-0.1.7",
        sha256 = "0840c1c50fd55e521b247f949c241c9997709f23bd7f023b9762cd561e935656",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/mio-named-pipes/0.1.7/download"],
        strip_prefix = "mio-named-pipes-0.1.7",
        build_file = Label("@//clients/rust/crates:BUILD.mio-named-pipes-0.1.7.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__mio-uds-0.6.8",
        sha256 = "afcb699eb26d4332647cc848492bbc15eafb26f08d0304550d5aa1f612e066f0",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/mio-uds/0.6.8/download"],
        strip_prefix = "mio-uds-0.6.8",
        build_file = Label("@//clients/rust/crates:BUILD.mio-uds-0.6.8.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__miow-0.2.2",
        sha256 = "ebd808424166322d4a38da87083bfddd3ac4c131334ed55856112eb06d46944d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/miow/0.2.2/download"],
        strip_prefix = "miow-0.2.2",
        build_file = Label("@//clients/rust/crates:BUILD.miow-0.2.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__miow-0.3.7",
        sha256 = "b9f1c5b025cda876f66ef43a113f91ebc9f4ccef34843000e0adf6ebbab84e21",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/miow/0.3.7/download"],
        strip_prefix = "miow-0.3.7",
        build_file = Label("@//clients/rust/crates:BUILD.miow-0.3.7.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__native-tls-0.2.11",
        sha256 = "07226173c32f2926027b63cce4bcd8076c3552846cbe7925f3aaffeac0a3b92e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/native-tls/0.2.11/download"],
        strip_prefix = "native-tls-0.2.11",
        build_file = Label("@//clients/rust/crates:BUILD.native-tls-0.2.11.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__net2-0.2.39",
        sha256 = "b13b648036a2339d06de780866fbdfda0dde886de7b3af2ddeba8b14f4ee34ac",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/net2/0.2.39/download"],
        strip_prefix = "net2-0.2.39",
        build_file = Label("@//clients/rust/crates:BUILD.net2-0.2.39.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__num-traits-0.2.17",
        sha256 = "39e3200413f237f41ab11ad6d161bc7239c84dcb631773ccd7de3dfe4b5c267c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/num-traits/0.2.17/download"],
        strip_prefix = "num-traits-0.2.17",
        build_file = Label("@//clients/rust/crates:BUILD.num-traits-0.2.17.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__num_cpus-1.16.0",
        sha256 = "4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/num_cpus/1.16.0/download"],
        strip_prefix = "num_cpus-1.16.0",
        build_file = Label("@//clients/rust/crates:BUILD.num_cpus-1.16.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__once_cell-1.18.0",
        sha256 = "dd8b5dd2ae5ed71462c540258bedcb51965123ad7e7ccf4b9a8cafaa4a63576d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/once_cell/1.18.0/download"],
        strip_prefix = "once_cell-1.18.0",
        build_file = Label("@//clients/rust/crates:BUILD.once_cell-1.18.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__openssl-0.10.59",
        sha256 = "7a257ad03cd8fb16ad4172fedf8094451e1af1c4b70097636ef2eac9a5f0cc33",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/openssl/0.10.59/download"],
        strip_prefix = "openssl-0.10.59",
        build_file = Label("@//clients/rust/crates:BUILD.openssl-0.10.59.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__openssl-macros-0.1.1",
        sha256 = "a948666b637a0f465e8564c73e89d4dde00d72d4d473cc972f390fc3dcee7d9c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/openssl-macros/0.1.1/download"],
        strip_prefix = "openssl-macros-0.1.1",
        build_file = Label("@//clients/rust/crates:BUILD.openssl-macros-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__openssl-probe-0.1.5",
        sha256 = "ff011a302c396a5197692431fc1948019154afc178baf7d8e37367442a4601cf",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/openssl-probe/0.1.5/download"],
        strip_prefix = "openssl-probe-0.1.5",
        build_file = Label("@//clients/rust/crates:BUILD.openssl-probe-0.1.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__openssl-sys-0.9.95",
        sha256 = "40a4130519a360279579c2053038317e40eff64d13fd3f004f9e1b72b8a6aaf9",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/openssl-sys/0.9.95/download"],
        strip_prefix = "openssl-sys-0.9.95",
        build_file = Label("@//clients/rust/crates:BUILD.openssl-sys-0.9.95.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__parse-zoneinfo-0.3.0",
        sha256 = "c705f256449c60da65e11ff6626e0c16a0a0b96aaa348de61376b249bc340f41",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/parse-zoneinfo/0.3.0/download"],
        strip_prefix = "parse-zoneinfo-0.3.0",
        build_file = Label("@//clients/rust/crates:BUILD.parse-zoneinfo-0.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__percent-encoding-2.3.0",
        sha256 = "9b2a4787296e9989611394c33f193f676704af1686e70b8f8033ab5ba9a35a94",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/percent-encoding/2.3.0/download"],
        strip_prefix = "percent-encoding-2.3.0",
        build_file = Label("@//clients/rust/crates:BUILD.percent-encoding-2.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__phf-0.11.2",
        sha256 = "ade2d8b8f33c7333b51bcf0428d37e217e9f32192ae4772156f65063b8ce03dc",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/phf/0.11.2/download"],
        strip_prefix = "phf-0.11.2",
        build_file = Label("@//clients/rust/crates:BUILD.phf-0.11.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__phf_codegen-0.11.2",
        sha256 = "e8d39688d359e6b34654d328e262234662d16cc0f60ec8dcbe5e718709342a5a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/phf_codegen/0.11.2/download"],
        strip_prefix = "phf_codegen-0.11.2",
        build_file = Label("@//clients/rust/crates:BUILD.phf_codegen-0.11.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__phf_generator-0.11.2",
        sha256 = "48e4cc64c2ad9ebe670cb8fd69dd50ae301650392e81c05f9bfcb2d5bdbc24b0",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/phf_generator/0.11.2/download"],
        strip_prefix = "phf_generator-0.11.2",
        build_file = Label("@//clients/rust/crates:BUILD.phf_generator-0.11.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__phf_shared-0.11.2",
        sha256 = "90fcb95eef784c2ac79119d1dd819e162b5da872ce6f3c3abe1e8ca1c082f72b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/phf_shared/0.11.2/download"],
        strip_prefix = "phf_shared-0.11.2",
        build_file = Label("@//clients/rust/crates:BUILD.phf_shared-0.11.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__pin-project-1.1.3",
        sha256 = "fda4ed1c6c173e3fc7a83629421152e01d7b1f9b7f65fb301e490e8cfc656422",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/pin-project/1.1.3/download"],
        strip_prefix = "pin-project-1.1.3",
        build_file = Label("@//clients/rust/crates:BUILD.pin-project-1.1.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__pin-project-internal-1.1.3",
        sha256 = "4359fd9c9171ec6e8c62926d6faaf553a8dc3f64e1507e76da7911b4f6a04405",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/pin-project-internal/1.1.3/download"],
        strip_prefix = "pin-project-internal-1.1.3",
        build_file = Label("@//clients/rust/crates:BUILD.pin-project-internal-1.1.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__pin-project-lite-0.1.12",
        sha256 = "257b64915a082f7811703966789728173279bdebb956b143dbcd23f6f970a777",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/pin-project-lite/0.1.12/download"],
        strip_prefix = "pin-project-lite-0.1.12",
        build_file = Label("@//clients/rust/crates:BUILD.pin-project-lite-0.1.12.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__pin-project-lite-0.2.13",
        sha256 = "8afb450f006bf6385ca15ef45d71d2288452bc3683ce2e2cacc0d18e4be60b58",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/pin-project-lite/0.2.13/download"],
        strip_prefix = "pin-project-lite-0.2.13",
        build_file = Label("@//clients/rust/crates:BUILD.pin-project-lite-0.2.13.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__pin-utils-0.1.0",
        sha256 = "8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/pin-utils/0.1.0/download"],
        strip_prefix = "pin-utils-0.1.0",
        build_file = Label("@//clients/rust/crates:BUILD.pin-utils-0.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__pkg-config-0.3.27",
        sha256 = "26072860ba924cbfa98ea39c8c19b4dd6a4a25423dbdf219c1eca91aa0cf6964",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/pkg-config/0.3.27/download"],
        strip_prefix = "pkg-config-0.3.27",
        build_file = Label("@//clients/rust/crates:BUILD.pkg-config-0.3.27.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__proc-macro2-1.0.69",
        sha256 = "134c189feb4956b20f6f547d2cf727d4c0fe06722b20a0eec87ed445a97f92da",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/proc-macro2/1.0.69/download"],
        strip_prefix = "proc-macro2-1.0.69",
        build_file = Label("@//clients/rust/crates:BUILD.proc-macro2-1.0.69.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__quote-1.0.33",
        sha256 = "5267fca4496028628a95160fc423a33e8b2e6af8a5302579e322e4b520293cae",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/quote/1.0.33/download"],
        strip_prefix = "quote-1.0.33",
        build_file = Label("@//clients/rust/crates:BUILD.quote-1.0.33.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__rand-0.8.5",
        sha256 = "34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rand/0.8.5/download"],
        strip_prefix = "rand-0.8.5",
        build_file = Label("@//clients/rust/crates:BUILD.rand-0.8.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__rand_core-0.6.4",
        sha256 = "ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rand_core/0.6.4/download"],
        strip_prefix = "rand_core-0.6.4",
        build_file = Label("@//clients/rust/crates:BUILD.rand_core-0.6.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__redox_syscall-0.4.1",
        sha256 = "4722d768eff46b75989dd134e5c353f0d6296e5aaa3132e776cbdb56be7731aa",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/redox_syscall/0.4.1/download"],
        strip_prefix = "redox_syscall-0.4.1",
        build_file = Label("@//clients/rust/crates:BUILD.redox_syscall-0.4.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__regex-1.10.2",
        sha256 = "380b951a9c5e80ddfd6136919eef32310721aa4aacd4889a8d39124b026ab343",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/regex/1.10.2/download"],
        strip_prefix = "regex-1.10.2",
        build_file = Label("@//clients/rust/crates:BUILD.regex-1.10.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__regex-automata-0.4.3",
        sha256 = "5f804c7828047e88b2d32e2d7fe5a105da8ee3264f01902f796c8e067dc2483f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/regex-automata/0.4.3/download"],
        strip_prefix = "regex-automata-0.4.3",
        build_file = Label("@//clients/rust/crates:BUILD.regex-automata-0.4.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__regex-syntax-0.8.2",
        sha256 = "c08c74e62047bb2de4ff487b251e4a92e24f48745648451635cec7d591162d9f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/regex-syntax/0.8.2/download"],
        strip_prefix = "regex-syntax-0.8.2",
        build_file = Label("@//clients/rust/crates:BUILD.regex-syntax-0.8.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__reqwest-0.10.10",
        sha256 = "0718f81a8e14c4dbb3b34cf23dc6aaf9ab8a0dfec160c534b3dbca1aaa21f47c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/reqwest/0.10.10/download"],
        strip_prefix = "reqwest-0.10.10",
        build_file = Label("@//clients/rust/crates:BUILD.reqwest-0.10.10.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__rustix-0.38.21",
        sha256 = "2b426b0506e5d50a7d8dafcf2e81471400deb602392c7dd110815afb4eaf02a3",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rustix/0.38.21/download"],
        strip_prefix = "rustix-0.38.21",
        build_file = Label("@//clients/rust/crates:BUILD.rustix-0.38.21.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__rustversion-1.0.14",
        sha256 = "7ffc183a10b4478d04cbbbfc96d0873219d962dd5accaff2ffbd4ceb7df837f4",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rustversion/1.0.14/download"],
        strip_prefix = "rustversion-1.0.14",
        build_file = Label("@//clients/rust/crates:BUILD.rustversion-1.0.14.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__ryu-1.0.15",
        sha256 = "1ad4cc8da4ef723ed60bced201181d83791ad433213d8c24efffda1eec85d741",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/ryu/1.0.15/download"],
        strip_prefix = "ryu-1.0.15",
        build_file = Label("@//clients/rust/crates:BUILD.ryu-1.0.15.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__schannel-0.1.22",
        sha256 = "0c3733bf4cf7ea0880754e19cb5a462007c4a8c1914bff372ccc95b464f1df88",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/schannel/0.1.22/download"],
        strip_prefix = "schannel-0.1.22",
        build_file = Label("@//clients/rust/crates:BUILD.schannel-0.1.22.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__security-framework-2.9.2",
        sha256 = "05b64fb303737d99b81884b2c63433e9ae28abebe5eb5045dcdd175dc2ecf4de",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/security-framework/2.9.2/download"],
        strip_prefix = "security-framework-2.9.2",
        build_file = Label("@//clients/rust/crates:BUILD.security-framework-2.9.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__security-framework-sys-2.9.1",
        sha256 = "e932934257d3b408ed8f30db49d85ea163bfe74961f017f405b025af298f0c7a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/security-framework-sys/2.9.1/download"],
        strip_prefix = "security-framework-sys-2.9.1",
        build_file = Label("@//clients/rust/crates:BUILD.security-framework-sys-2.9.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__serde-1.0.190",
        sha256 = "91d3c334ca1ee894a2c6f6ad698fe8c435b76d504b13d436f0685d648d6d96f7",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/serde/1.0.190/download"],
        strip_prefix = "serde-1.0.190",
        build_file = Label("@//clients/rust/crates:BUILD.serde-1.0.190.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__serde_derive-1.0.190",
        sha256 = "67c5609f394e5c2bd7fc51efda478004ea80ef42fee983d5c67a65e34f32c0e3",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/serde_derive/1.0.190/download"],
        strip_prefix = "serde_derive-1.0.190",
        build_file = Label("@//clients/rust/crates:BUILD.serde_derive-1.0.190.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__serde_json-1.0.108",
        sha256 = "3d1c7e3eac408d115102c4c24ad393e0821bb3a5df4d506a80f85f7a742a526b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/serde_json/1.0.108/download"],
        strip_prefix = "serde_json-1.0.108",
        build_file = Label("@//clients/rust/crates:BUILD.serde_json-1.0.108.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__serde_urlencoded-0.7.1",
        sha256 = "d3491c14715ca2294c4d6a88f15e84739788c1d030eed8c110436aafdaa2f3fd",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/serde_urlencoded/0.7.1/download"],
        strip_prefix = "serde_urlencoded-0.7.1",
        build_file = Label("@//clients/rust/crates:BUILD.serde_urlencoded-0.7.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__signal-hook-registry-1.4.1",
        sha256 = "d8229b473baa5980ac72ef434c4415e70c4b5e71b423043adb4ba059f89c99a1",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/signal-hook-registry/1.4.1/download"],
        strip_prefix = "signal-hook-registry-1.4.1",
        build_file = Label("@//clients/rust/crates:BUILD.signal-hook-registry-1.4.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__siphasher-0.3.11",
        sha256 = "38b58827f4464d87d377d175e90bf58eb00fd8716ff0a62f80356b5e61555d0d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/siphasher/0.3.11/download"],
        strip_prefix = "siphasher-0.3.11",
        build_file = Label("@//clients/rust/crates:BUILD.siphasher-0.3.11.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__slab-0.4.9",
        sha256 = "8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/slab/0.4.9/download"],
        strip_prefix = "slab-0.4.9",
        build_file = Label("@//clients/rust/crates:BUILD.slab-0.4.9.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__socket2-0.3.19",
        sha256 = "122e570113d28d773067fab24266b66753f6ea915758651696b6e35e49f88d6e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/socket2/0.3.19/download"],
        strip_prefix = "socket2-0.3.19",
        build_file = Label("@//clients/rust/crates:BUILD.socket2-0.3.19.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__strum-0.25.0",
        sha256 = "290d54ea6f91c969195bdbcd7442c8c2a2ba87da8bf60a7ee86a235d4bc1e125",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/strum/0.25.0/download"],
        strip_prefix = "strum-0.25.0",
        build_file = Label("@//clients/rust/crates:BUILD.strum-0.25.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__strum_macros-0.25.3",
        sha256 = "23dc1fa9ac9c169a78ba62f0b841814b7abae11bdd047b9c58f893439e309ea0",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/strum_macros/0.25.3/download"],
        strip_prefix = "strum_macros-0.25.3",
        build_file = Label("@//clients/rust/crates:BUILD.strum_macros-0.25.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__syn-1.0.109",
        sha256 = "72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/syn/1.0.109/download"],
        strip_prefix = "syn-1.0.109",
        build_file = Label("@//clients/rust/crates:BUILD.syn-1.0.109.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__syn-2.0.38",
        sha256 = "e96b79aaa137db8f61e26363a0c9b47d8b4ec75da28b7d1d614c2303e232408b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/syn/2.0.38/download"],
        strip_prefix = "syn-2.0.38",
        build_file = Label("@//clients/rust/crates:BUILD.syn-2.0.38.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__tempfile-3.8.1",
        sha256 = "7ef1adac450ad7f4b3c28589471ade84f25f731a7a0fe30d71dfa9f60fd808e5",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tempfile/3.8.1/download"],
        strip_prefix = "tempfile-3.8.1",
        build_file = Label("@//clients/rust/crates:BUILD.tempfile-3.8.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__thiserror-1.0.50",
        sha256 = "f9a7210f5c9a7156bb50aa36aed4c95afb51df0df00713949448cf9e97d382d2",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/thiserror/1.0.50/download"],
        strip_prefix = "thiserror-1.0.50",
        build_file = Label("@//clients/rust/crates:BUILD.thiserror-1.0.50.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__thiserror-impl-1.0.50",
        sha256 = "266b2e40bc00e5a6c09c3584011e08b06f123c00362c92b975ba9843aaaa14b8",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/thiserror-impl/1.0.50/download"],
        strip_prefix = "thiserror-impl-1.0.50",
        build_file = Label("@//clients/rust/crates:BUILD.thiserror-impl-1.0.50.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__tinyvec-1.6.0",
        sha256 = "87cc5ceb3875bb20c2890005a4e226a4651264a5c75edb2421b52861a0a0cb50",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tinyvec/1.6.0/download"],
        strip_prefix = "tinyvec-1.6.0",
        build_file = Label("@//clients/rust/crates:BUILD.tinyvec-1.6.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__tinyvec_macros-0.1.1",
        sha256 = "1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tinyvec_macros/0.1.1/download"],
        strip_prefix = "tinyvec_macros-0.1.1",
        build_file = Label("@//clients/rust/crates:BUILD.tinyvec_macros-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__tokio-0.2.25",
        sha256 = "6703a273949a90131b290be1fe7b039d0fc884aa1935860dfcbe056f28cd8092",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tokio/0.2.25/download"],
        strip_prefix = "tokio-0.2.25",
        build_file = Label("@//clients/rust/crates:BUILD.tokio-0.2.25.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__tokio-macros-0.2.6",
        sha256 = "e44da00bfc73a25f814cd8d7e57a68a5c31b74b3152a0a1d1f590c97ed06265a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tokio-macros/0.2.6/download"],
        strip_prefix = "tokio-macros-0.2.6",
        build_file = Label("@//clients/rust/crates:BUILD.tokio-macros-0.2.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__tokio-tls-0.3.1",
        sha256 = "9a70f4fcd7b3b24fb194f837560168208f669ca8cb70d0c4b862944452396343",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tokio-tls/0.3.1/download"],
        strip_prefix = "tokio-tls-0.3.1",
        build_file = Label("@//clients/rust/crates:BUILD.tokio-tls-0.3.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__tokio-util-0.3.1",
        sha256 = "be8242891f2b6cbef26a2d7e8605133c2c554cd35b3e4948ea892d6d68436499",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tokio-util/0.3.1/download"],
        strip_prefix = "tokio-util-0.3.1",
        build_file = Label("@//clients/rust/crates:BUILD.tokio-util-0.3.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__tower-service-0.3.2",
        sha256 = "b6bc1c9ce2b5135ac7f93c72918fc37feb872bdc6a5533a8b85eb4b86bfdae52",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tower-service/0.3.2/download"],
        strip_prefix = "tower-service-0.3.2",
        build_file = Label("@//clients/rust/crates:BUILD.tower-service-0.3.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__tracing-0.1.40",
        sha256 = "c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tracing/0.1.40/download"],
        strip_prefix = "tracing-0.1.40",
        build_file = Label("@//clients/rust/crates:BUILD.tracing-0.1.40.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__tracing-core-0.1.32",
        sha256 = "c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tracing-core/0.1.32/download"],
        strip_prefix = "tracing-core-0.1.32",
        build_file = Label("@//clients/rust/crates:BUILD.tracing-core-0.1.32.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__tracing-futures-0.2.5",
        sha256 = "97d095ae15e245a057c8e8451bab9b3ee1e1f68e9ba2b4fbc18d0ac5237835f2",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tracing-futures/0.2.5/download"],
        strip_prefix = "tracing-futures-0.2.5",
        build_file = Label("@//clients/rust/crates:BUILD.tracing-futures-0.2.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__try-lock-0.2.4",
        sha256 = "3528ecfd12c466c6f163363caf2d02a71161dd5e1cc6ae7b34207ea2d42d81ed",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/try-lock/0.2.4/download"],
        strip_prefix = "try-lock-0.2.4",
        build_file = Label("@//clients/rust/crates:BUILD.try-lock-0.2.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__unicase-2.7.0",
        sha256 = "f7d2d4dafb69621809a81864c9c1b864479e1235c0dd4e199924b9742439ed89",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/unicase/2.7.0/download"],
        strip_prefix = "unicase-2.7.0",
        build_file = Label("@//clients/rust/crates:BUILD.unicase-2.7.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__unicode-bidi-0.3.13",
        sha256 = "92888ba5573ff080736b3648696b70cafad7d250551175acbaa4e0385b3e1460",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/unicode-bidi/0.3.13/download"],
        strip_prefix = "unicode-bidi-0.3.13",
        build_file = Label("@//clients/rust/crates:BUILD.unicode-bidi-0.3.13.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__unicode-ident-1.0.12",
        sha256 = "3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/unicode-ident/1.0.12/download"],
        strip_prefix = "unicode-ident-1.0.12",
        build_file = Label("@//clients/rust/crates:BUILD.unicode-ident-1.0.12.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__unicode-normalization-0.1.22",
        sha256 = "5c5713f0fc4b5db668a2ac63cdb7bb4469d8c9fed047b1d0292cc7b0ce2ba921",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/unicode-normalization/0.1.22/download"],
        strip_prefix = "unicode-normalization-0.1.22",
        build_file = Label("@//clients/rust/crates:BUILD.unicode-normalization-0.1.22.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__url-2.4.1",
        sha256 = "143b538f18257fac9cad154828a57c6bf5157e1aa604d4816b5995bf6de87ae5",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/url/2.4.1/download"],
        strip_prefix = "url-2.4.1",
        build_file = Label("@//clients/rust/crates:BUILD.url-2.4.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__vcpkg-0.2.15",
        sha256 = "accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/vcpkg/0.2.15/download"],
        strip_prefix = "vcpkg-0.2.15",
        build_file = Label("@//clients/rust/crates:BUILD.vcpkg-0.2.15.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__version_check-0.9.4",
        sha256 = "49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/version_check/0.9.4/download"],
        strip_prefix = "version_check-0.9.4",
        build_file = Label("@//clients/rust/crates:BUILD.version_check-0.9.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__want-0.3.1",
        sha256 = "bfa7760aed19e106de2c7c0b581b509f2f25d3dacaf737cb82ac61bc6d760b0e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/want/0.3.1/download"],
        strip_prefix = "want-0.3.1",
        build_file = Label("@//clients/rust/crates:BUILD.want-0.3.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__wasm-bindgen-0.2.88",
        sha256 = "7daec296f25a1bae309c0cd5c29c4b260e510e6d813c286b19eaadf409d40fce",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/wasm-bindgen/0.2.88/download"],
        strip_prefix = "wasm-bindgen-0.2.88",
        build_file = Label("@//clients/rust/crates:BUILD.wasm-bindgen-0.2.88.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__wasm-bindgen-backend-0.2.88",
        sha256 = "e397f4664c0e4e428e8313a469aaa58310d302159845980fd23b0f22a847f217",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/wasm-bindgen-backend/0.2.88/download"],
        strip_prefix = "wasm-bindgen-backend-0.2.88",
        build_file = Label("@//clients/rust/crates:BUILD.wasm-bindgen-backend-0.2.88.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__wasm-bindgen-futures-0.4.38",
        sha256 = "9afec9963e3d0994cac82455b2b3502b81a7f40f9a0d32181f7528d9f4b43e02",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/wasm-bindgen-futures/0.4.38/download"],
        strip_prefix = "wasm-bindgen-futures-0.4.38",
        build_file = Label("@//clients/rust/crates:BUILD.wasm-bindgen-futures-0.4.38.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__wasm-bindgen-macro-0.2.88",
        sha256 = "5961017b3b08ad5f3fe39f1e79877f8ee7c23c5e5fd5eb80de95abc41f1f16b2",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/wasm-bindgen-macro/0.2.88/download"],
        strip_prefix = "wasm-bindgen-macro-0.2.88",
        build_file = Label("@//clients/rust/crates:BUILD.wasm-bindgen-macro-0.2.88.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__wasm-bindgen-macro-support-0.2.88",
        sha256 = "c5353b8dab669f5e10f5bd76df26a9360c748f054f862ff5f3f8aae0c7fb3907",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/wasm-bindgen-macro-support/0.2.88/download"],
        strip_prefix = "wasm-bindgen-macro-support-0.2.88",
        build_file = Label("@//clients/rust/crates:BUILD.wasm-bindgen-macro-support-0.2.88.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__wasm-bindgen-shared-0.2.88",
        sha256 = "0d046c5d029ba91a1ed14da14dca44b68bf2f124cfbaf741c54151fdb3e0750b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/wasm-bindgen-shared/0.2.88/download"],
        strip_prefix = "wasm-bindgen-shared-0.2.88",
        build_file = Label("@//clients/rust/crates:BUILD.wasm-bindgen-shared-0.2.88.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__web-sys-0.3.65",
        sha256 = "5db499c5f66323272151db0e666cd34f78617522fb0c1604d31a27c50c206a85",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/web-sys/0.3.65/download"],
        strip_prefix = "web-sys-0.3.65",
        build_file = Label("@//clients/rust/crates:BUILD.web-sys-0.3.65.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__winapi-0.2.8",
        sha256 = "167dc9d6949a9b857f3451275e911c3f44255842c1f7a76f33c55103a909087a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/winapi/0.2.8/download"],
        strip_prefix = "winapi-0.2.8",
        build_file = Label("@//clients/rust/crates:BUILD.winapi-0.2.8.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__winapi-0.3.9",
        sha256 = "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/winapi/0.3.9/download"],
        strip_prefix = "winapi-0.3.9",
        build_file = Label("@//clients/rust/crates:BUILD.winapi-0.3.9.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__winapi-build-0.1.1",
        sha256 = "2d315eee3b34aca4797b2da6b13ed88266e6d612562a0c46390af8299fc699bc",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/winapi-build/0.1.1/download"],
        strip_prefix = "winapi-build-0.1.1",
        build_file = Label("@//clients/rust/crates:BUILD.winapi-build-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__winapi-i686-pc-windows-gnu-0.4.0",
        sha256 = "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/winapi-i686-pc-windows-gnu/0.4.0/download"],
        strip_prefix = "winapi-i686-pc-windows-gnu-0.4.0",
        build_file = Label("@//clients/rust/crates:BUILD.winapi-i686-pc-windows-gnu-0.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__winapi-x86_64-pc-windows-gnu-0.4.0",
        sha256 = "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/winapi-x86_64-pc-windows-gnu/0.4.0/download"],
        strip_prefix = "winapi-x86_64-pc-windows-gnu-0.4.0",
        build_file = Label("@//clients/rust/crates:BUILD.winapi-x86_64-pc-windows-gnu-0.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__windows-core-0.51.1",
        sha256 = "f1f8cf84f35d2db49a46868f947758c7a1138116f7fac3bc844f43ade1292e64",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows-core/0.51.1/download"],
        strip_prefix = "windows-core-0.51.1",
        build_file = Label("@//clients/rust/crates:BUILD.windows-core-0.51.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__windows-sys-0.48.0",
        sha256 = "677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows-sys/0.48.0/download"],
        strip_prefix = "windows-sys-0.48.0",
        build_file = Label("@//clients/rust/crates:BUILD.windows-sys-0.48.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__windows-targets-0.48.5",
        sha256 = "9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows-targets/0.48.5/download"],
        strip_prefix = "windows-targets-0.48.5",
        build_file = Label("@//clients/rust/crates:BUILD.windows-targets-0.48.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__windows_aarch64_gnullvm-0.48.5",
        sha256 = "2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows_aarch64_gnullvm/0.48.5/download"],
        strip_prefix = "windows_aarch64_gnullvm-0.48.5",
        build_file = Label("@//clients/rust/crates:BUILD.windows_aarch64_gnullvm-0.48.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__windows_aarch64_msvc-0.48.5",
        sha256 = "dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows_aarch64_msvc/0.48.5/download"],
        strip_prefix = "windows_aarch64_msvc-0.48.5",
        build_file = Label("@//clients/rust/crates:BUILD.windows_aarch64_msvc-0.48.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__windows_i686_gnu-0.48.5",
        sha256 = "a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows_i686_gnu/0.48.5/download"],
        strip_prefix = "windows_i686_gnu-0.48.5",
        build_file = Label("@//clients/rust/crates:BUILD.windows_i686_gnu-0.48.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__windows_i686_msvc-0.48.5",
        sha256 = "8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows_i686_msvc/0.48.5/download"],
        strip_prefix = "windows_i686_msvc-0.48.5",
        build_file = Label("@//clients/rust/crates:BUILD.windows_i686_msvc-0.48.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__windows_x86_64_gnu-0.48.5",
        sha256 = "53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows_x86_64_gnu/0.48.5/download"],
        strip_prefix = "windows_x86_64_gnu-0.48.5",
        build_file = Label("@//clients/rust/crates:BUILD.windows_x86_64_gnu-0.48.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__windows_x86_64_gnullvm-0.48.5",
        sha256 = "0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows_x86_64_gnullvm/0.48.5/download"],
        strip_prefix = "windows_x86_64_gnullvm-0.48.5",
        build_file = Label("@//clients/rust/crates:BUILD.windows_x86_64_gnullvm-0.48.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__windows_x86_64_msvc-0.48.5",
        sha256 = "ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows_x86_64_msvc/0.48.5/download"],
        strip_prefix = "windows_x86_64_msvc-0.48.5",
        build_file = Label("@//clients/rust/crates:BUILD.windows_x86_64_msvc-0.48.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__winreg-0.7.0",
        sha256 = "0120db82e8a1e0b9fb3345a539c478767c0048d842860994d96113d5b667bd69",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/winreg/0.7.0/download"],
        strip_prefix = "winreg-0.7.0",
        build_file = Label("@//clients/rust/crates:BUILD.winreg-0.7.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor_pkgs__ws2_32-sys-0.2.1",
        sha256 = "d59cefebd0c892fa2dd6de581e937301d8552cb44489cdff035c6187cb63fa5e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/ws2_32-sys/0.2.1/download"],
        strip_prefix = "ws2_32-sys-0.2.1",
        build_file = Label("@//clients/rust/crates:BUILD.ws2_32-sys-0.2.1.bazel"),
    )
