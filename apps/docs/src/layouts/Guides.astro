---
import { getCollection, getEntry } from "astro:content";
import CommonDocumentationLayout from "@/layouts/CommonDocumentation.astro";
import type { Heading } from "@/types/docs";

const currentPageSlug = Astro.url.pathname
  .replace(`/guides/`, "")
  .replaceAll("/", "");

let currentPost = null;

if (currentPageSlug) {
  currentPost = await getEntry("guides", currentPageSlug) as Record<string, any>;
}

const rawDocumentationPages = await getCollection("guides");

const globbedDocumentationPages = await Astro.glob(
  "../content/guides/*.mdoc"
);

const documentationPages = await Promise.all(
  rawDocumentationPages.map(async (page, index) => {
    const globbedPage = globbedDocumentationPages[index];

    const newPage = {
      ...page,
    } as Record<string, any>;

    if (typeof globbedPage?.getHeadings === "function") {
      newPage.headings = ((await globbedPage?.getHeadings()).filter(
        (heading: Heading) => heading.depth === 2
      ) || []) as Heading[];
    }

    return newPage;
  })
);

documentationPages.sort((a, b) => {
  return (a.data.sortOrder || 0) - (b.data.sortOrder || 0);
});
---

<CommonDocumentationLayout
  documentationPages={documentationPages}
  currentPost={currentPost}
  currentPageSlug={currentPageSlug}
  pathPrefix="guides"
>
  <slot />
</CommonDocumentationLayout>
