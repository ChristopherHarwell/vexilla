---
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { getCollection } from "astro:content";

interface Heading {
  depth: number;
  slug: string;
  text: string;
}

const { pathname } = Astro.url;

const rawDocumentationPages = await getCollection("documentation");

const globbedDocumentationPages = await Astro.glob(
  "../content/documentation/*.mdoc"
);

const documentationPages = await Promise.all(
  rawDocumentationPages.map(async (page, index) => {
    const globbedPage = globbedDocumentationPages[index];
    return {
      ...page,
      headings: ((await globbedPage?.getHeadings()).filter(
        (heading: Heading) => heading.depth === 2
      ) || []) as Heading[],
    } as Record<string, any>;
  })
);

documentationPages.sort((a, b) => {
  return (a.data.sortOrder || 0) - (b.data.sortOrder || 0);
});

// console.log("currentPage", documentationPages[0]);

const currentDocumentationPage = documentationPages.find(
  (page) => `/documentation/${page.slug}` === pathname
);
---

<div class="flex flex-row">
  <div class="w-80 p-2 relative">
    <div class="sticky top-[7rem]">
      <Card>
        <CardHeader>
          <CardTitle>Documentation</CardTitle>
        </CardHeader>
        <CardContent>
          <ul class="pl-6">
            {
              documentationPages.map((page) => (
                <li class="pb-4">
                  <a href={`/documentation/${page.slug}`}>{page.data.title}</a>

                  {Astro.url.pathname === `/documentation/${page.slug}` && (
                    <ul class="pl-6 headings">
                      {page.headings.map((heading: Heading) => (
                        <li data-slug={heading.slug}>
                          <a
                            href={`/documentation/${page.slug}#${heading.slug}`}
                          >
                            {heading.text}
                          </a>
                        </li>
                      ))}
                    </ul>
                  )}
                </li>
              ))
            }
          </ul>
        </CardContent>
      </Card>
    </div>
  </div>
  <div class="flex-auto main-content">
    <div class="prose lg:prose-xl dark:prose-invert mx-auto">
      <slot />
    </div>
  </div>
</div>

<script is:inline>
window.addEventListener("DOMContentLoaded", () => {
  const pageHeadings = Array.from(
    document.querySelectorAll(".main-content h2")
  ).map((heading) => {
    return {
      slug: heading.getAttribute("data-slug"),
      offset: heading.getBoundingClientRect().top,
    };
  });

  const menuHeadings = Array.from(
    document.querySelectorAll(".headings li")
  ).reverse();

  window.addEventListener(
    "scroll",
    function (scrollEvent) {
      let currentHeading = null;

      menuHeadings.forEach((menuHeading) => {
        const pageHeadingForMenuHeading = pageHeadings.find(
          (pageHeading) =>
            pageHeading.slug === menuHeading.getAttribute("data-slug")
        );

        menuHeading.classList.remove("font-bold");

        console.log({ pageHeadingForMenuHeading });

        if (
          window.scrollY >= pageHeadingForMenuHeading.offset &&
          !currentHeading
        ) {
          currentHeading = menuHeading;
        }
      });

      // if(!currentHeading) {
      //   currentHeading = pageHeadings[pageHeadings.length - 1];
      // }

      console.log({ currentHeading });

      if (currentHeading) {
        currentHeading.classList.add("font-bold");
      }
    },
    {
      passive: true,
    }
  );
});
</script>
